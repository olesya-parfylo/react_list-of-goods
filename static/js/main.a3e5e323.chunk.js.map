{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goodsList","selected","isReversed","sortBy","newgoodsList","filter","good","length","sort","goodFirst","goodSecond","localeCompare","reverse","map","goodsFromServer","options","App","state","isShowGoodsList","start","setState","reset","this","className","name","id","value","onChange","target","Number","option","type","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"4OASaA,EAAYC,IAAMC,MAC7B,YAKc,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,SACAC,EAEW,EAFXA,WACAC,EACW,EADXA,OAEMC,EAAeJ,EAAUK,QAAO,SAACC,GAAD,OACpCA,EAAKC,QAAUN,KAsBjB,OAnBAG,EAAaI,MAAK,SAACC,EAAmBC,GACpC,OAAQP,GACN,IAAK,sBAEH,OAAOM,EAAUE,cAAcD,GAEjC,IAAK,iBAEH,OAAOD,EAAUF,OAASG,EAAWH,OAEvC,QACE,OAAO,MAITL,GACFE,EAAaQ,UAIb,6BACGR,EAAaS,KAAI,SAACP,GAAD,OAChB,6BACGA,GADMA,WCrCbQ,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAUtCC,E,4MACJC,MAAQ,CACNjB,UAAWc,EACXI,iBAAiB,EACjBjB,SAAU,EACVC,YAAY,EACZC,OAAQ,I,EAGVgB,MAAQ,WACN,EAAKC,UAAS,SAACH,GAAD,MAAmB,CAC/BC,iBAAkBD,EAAMC,qB,EAI5BN,QAAU,WACR,EAAKQ,UAAS,SAACH,GAAD,MAAmB,CAC/Bf,YAAae,EAAMf,gB,EAIvBM,KAAO,SAACL,GACN,EAAKiB,SAAS,CAAEjB,Y,EAGlBkB,MAAQ,WACN,EAAKD,SAAS,CACZnB,SAAU,EACVC,YAAY,EACZC,OAAQ,M,4CAIZ,WAAU,IAAD,OACP,EAMImB,KAAKL,MALPjB,EADF,EACEA,UACAkB,EAFF,EAEEA,gBACAjB,EAHF,EAGEA,SACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,OAGF,OACE,sBAAKoB,UAAU,MAAf,UACE,uCAEG,IACAvB,EAAUO,UAEb,wBACEiB,KAAK,SACLC,GAAG,IACHC,MAAOzB,EACP0B,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKR,SAAS,CAAEnB,SAAU4B,OAAOD,EAAOF,UAL5C,SAQGX,EAAQF,KAAI,SAACiB,GAAD,OACX,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,QAK/BZ,GACC,cAACrB,EAAD,CACEG,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,OAAQA,KAGVe,GACA,wBACEa,KAAK,SACLR,UAAU,qBACVS,QAASV,KAAKH,MAHhB,mBAQF,wBACEY,KAAK,SACLR,UAAU,SACVS,QAASV,KAAKV,QAHhB,qBAOA,wBACEmB,KAAK,SACLR,UAAU,SACVS,QAAS,WACP,EAAKxB,KAAK,wBAJd,iCASA,wBACEuB,KAAK,SACLR,UAAU,SACVS,QAAS,WACP,EAAKxB,KAAK,mBAJd,4BASA,wBACEuB,KAAK,SACLR,UAAU,SACVS,QAASV,KAAKD,MAHhB,0B,GAzGUvB,IAAMmC,WAqHTjB,IC9IfkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3e5e323.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsList: string[],\n  selected: number,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport const GoodsList = React.memo(\n  ({\n    goodsList,\n    selected,\n    isReversed,\n    sortBy,\n  }: Props) => {\n    const newgoodsList = goodsList.filter((good: string) => (\n      good.length >= selected\n    ));\n\n    newgoodsList.sort((goodFirst: string, goodSecond: string) => {\n      switch (sortBy) {\n        case 'Sort alphabetically':\n\n          return goodFirst.localeCompare(goodSecond);\n\n        case 'Sort by length':\n\n          return goodFirst.length - goodSecond.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      newgoodsList.reverse();\n    }\n\n    return (\n      <ul>\n        {newgoodsList.map((good: string) => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  },\n);\n","import React from 'react';\nimport './App.css';\n\nimport { GoodsList } from './Components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ntype State = {\n  goodsList: string[],\n  isShowGoodsList: boolean,\n  selected: number,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nclass App extends React.Component {\n  state = {\n    goodsList: goodsFromServer,\n    isShowGoodsList: false,\n    selected: 1,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  start = () => {\n    this.setState((state: State) => ({\n      isShowGoodsList: !state.isShowGoodsList,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (sortBy: string) => {\n    this.setState({ sortBy });\n  };\n\n  reset = () => {\n    this.setState({\n      selected: 1,\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      goodsList,\n      isShowGoodsList,\n      selected,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Goods\n          {' '}\n          {goodsList.length}\n        </h1>\n        <select\n          name=\"select\"\n          id=\"1\"\n          value={selected}\n          onChange={({ target }) => {\n            this.setState({ selected: Number(target.value) });\n          }}\n        >\n          {options.map((option: number) => (\n            <option value={option} key={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n        {isShowGoodsList && (\n          <GoodsList\n            goodsList={goodsList}\n            selected={selected}\n            isReversed={isReversed}\n            sortBy={sortBy}\n          />\n        )}\n        {!isShowGoodsList && (\n          <button\n            type=\"button\"\n            className=\"button buttonStart\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.sort('Sort alphabetically');\n          }}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.sort('Sort by length');\n          }}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}